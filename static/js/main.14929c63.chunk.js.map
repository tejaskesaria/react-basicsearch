{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search-field.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","CardList","monsters","map","SearchBox","placeholder","handleChnage","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredValue","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,KACnE,6BAAKL,EAAMG,QAAQG,YCAdC,G,MAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,WCLlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6BHG,G,wDA/Bb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALJ,E,gEASO,IAAD,OACjBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,+BAErC,IAAD,SAE2BE,KAAKR,MAA/BR,EAFD,EAECA,SAAWS,EAFZ,EAEYA,YACZQ,EAAgBjB,EAASkB,QAAO,SAAAlB,GAAQ,OAAIA,EAASF,KAAKqB,cAAcC,SAASX,EAAYU,kBACnG,OAEE,aADA,CACA,OAAK1B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAWU,YAAa,cACtBC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUvB,SAAUiB,a,GA1BZO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.14929c63.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img src={`https://robohash.org/${props.monster.id}?set=set1`} alt=\"\"/>\n        <h2>{props.monster.name}</h2>\n    </div>\n)","import React from \"react\";\n\nimport { Card } from '../card/card.component'\nimport './card-list.style.css'\n\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n            <Card key={monster.id} monster = {monster} />\n          ))}\n    </div>\n)","import React from 'react';\nimport './searchbox.style.css';\n\n\nexport const SearchBox = ({placeholder, handleChnage}) => (\n    <input \n        className=\"search\" \n        type=\"search\" \n        placeholder={placeholder} \n        onChange={handleChnage} />\n)","import React, { Component } from 'react'\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search/search-field.component';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({monsters: users}))\n  }\n  render(){\n    // store original value of array and searchbox\n    const {monsters , searchField} = this.state;\n    const filteredValue = monsters.filter(monsters => monsters.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      // main body\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <SearchBox placeholder= \"search here\" \n            handleChnage={e => this.setState({searchField: e.target.value})} />\n          {/* <input type=\"search\" placeholder=\"search here\" onChange={e => this.setState({searchField: e.target.value}, ()=> console.log(this.state)) } /> */}\n          <CardList monsters={filteredValue} />\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}